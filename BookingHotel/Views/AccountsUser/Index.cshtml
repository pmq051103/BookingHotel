@model PaginatedList<BookingHotel.Models.Account>

@{
    Layout = "_ManagementLayout";
    ViewData["Title"] = "Index";
}
<link href="~/css/menuid.css" rel="stylesheet" />
<style>

</style>

<h1>Accounts Management</h1>

<p>
    <a asp-action="Create" class="btn btn-primary" style="border-radius : 5px">Create New</a>
</p>
<form asp-action="Index" method="get" class="custom-form">
    <div class="form-group">
        <label for="searchString" class="mr-2">Find by name:</label>
        <input type="text" id="searchString" name="SearchString" value="@ViewData["CurrentFilter"]" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">
            <i class="fas fa-search"></i> Search
        </button>
    </div>
    <div class="form-group">
        <a asp-action="Index" class="btn btn-info">Back to Full List</a>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().phoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().role)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.phoneNumber)
                </td>
                <td>
                    @if (item.role == 0)
                    {
                        <text>User</text>
                    }
                    else if (item.role == 1)
                    {
                        <text>Admin</text>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.accountID" class="btn btn-info btn-icon">
                        <i class="fas fa-edit"></i> Edit
                    </a> |
                    <a asp-action="Details" asp-route-id="@item.accountID" class="btn btn-success btn-icon">
                        <i class="fas fa-eye"></i> Details
                    </a> |
                    <a asp-action="Delete" asp-route-id="@item.accountID" class="btn btn-danger btn-icon">
                        <i class="fas fa-trash"></i> Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    Page @(Model.PageIndex) of @(Model.TotalPages)
</div>
<div>
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" asp-route-searchString="@ViewData["CurrentFilter"]" class="btn btn-info">Previous</a>
    }
    @if (Model.HasNextPage)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" asp-route-searchString="@ViewData["CurrentFilter"]" class="btn btn-info">Next</a>
    }
</div>
